service: budgets

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  role : myBudgetRole
  apiGateway:
    restApiId: ajexrc4gb4
    restApiRootResourceId: qkfc6i9nvg
  environment:
    BUDGETS_TABLE: budgets
  # iamRoleStatements:
  #   - Effect: "Allow"
  #     Action:
  #     Resource:
  #       - "arn:aws:dynamodb:eu-west-2::"

functions:
  budgets_get:
    handler: budgets.get
    events:
      - http:
          path: /budgets
          method: get
          authorizer:
            name: AuthorizationBudgets
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  budgets_post:
    handler: budgets.post
    events:
      - http:
          path: /budgets
          method: post
          authorizer:
            name: AuthorizationBudgets
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
plugins:
  - serverless-import-apigateway
custom:
  importApiGateway:
    name: ${self:provider.stage}-user-home
resources:
  Resources:
  myBudgetRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: myBudgetRole
      
   budgets:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: budgets
       AttributeDefinitions:
         - AttributeName: userId
           AttributeType: S
         - AttributeName: budgetsId
           AttributeType: S
       KeySchema:
         - AttributeName: userId
           KeyType: HASH
         - AttributeName: budgetsId
           KeyType: RANGE
       BillingMode: PAY_PER_REQUEST
