# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: user-home
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  environment:
    RECEIPTS_TABLE: bankinReceipts

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"



# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**



functions:
  user:
    handler: user.home
    events:
      - http:
          path: /user
          method: get
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  user_update:
    handler: user_update.update
    events:
      - http:
          path: /user/update
          method: post
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  user_delete:
    handler: user_delete.delete
    events:
    - http:
        path: /user/delete
        method: post
        authorizer:
          name: authorizer
          arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  expenses_get:
    handler: expenses.get
    events:
      - http:
          path: /user/receipts
          method: get
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  expenses_post:
    handler: expenses.post
    events:
      - http:
          path: /user/receipts
          method: post
          authorizer:
            name: authorizer
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
#  Authorizer:
#    Type: AWS::ApiGateway::Authorizer
#    Properties:
#      Type: COGNITO_USER_POOLS
#      RestApiId: !Ref OAuthAPI-API
#      ProviderARNs: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
#      existing: true

plugins:
  - serverless-import-apigateway

resources:
  Resources:
    receipts:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: bankinReceipts
        AttributeDefinitions:
          - AttributeName: receiptId
            AttributeType: S
        KeySchema:
          - AttributeName: receiptId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

