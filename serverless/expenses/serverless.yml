service: expenses
frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-2
  apiGateway:
    restApiId: ajexrc4gb4
    restApiRootResourceId: qkfc6i9nvg
  environment:
    RECEIPTS_TABLE: receipts
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:eu-west-2:843314631316:table/receipts"

functions:
  expenses_get:
    handler: expenses.get
    events:
      - http:
          path: /receipts
          method: get
          authorizer:
            name: Authorization
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M
  expenses_post:
    handler: expenses.post
    events:
      - http:
          path: /receipts
          method: post
          authorizer:
            name: Authorization
            arn: arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M

plugins:
  - serverless-import-apigateway

resources:
 Resources:
   receipts:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: receipts
       AttributeDefinitions:
         - AttributeName: userId
           AttributeType: S
         - AttributeName: receiptId
           AttributeType: S
       KeySchema:
         - AttributeName: userId
           KeyType: HASH
         - AttributeName: receiptId
           KeyType: RANGE
       BillingMode: PAY_PER_REQUEST