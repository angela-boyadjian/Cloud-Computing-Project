{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "LaunchGenerationPDFLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/my-fargate-pdf-dev-launchGenerationPDF",
        "RetentionInDays": 1
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "my-fargate-pdf",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-fargate-pdf-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-fargate-pdf-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:ListBucket"
                  ],
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:s3:::${BucketName}/*",
                      {
                        "BucketName": "fargate-receipts-pdf-bucket"
                      }
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecs:RunTask"
                  ],
                  "Resource": [
                    {
                      "Ref": "FargateECSTaskDefinition"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "FargateExecutionRole",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "iam:PassRole"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "FargateTaskRole",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:eu-west-2:843314631316:table/user_finances"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "my-fargate-pdf",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "LaunchGenerationPDFLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/my-fargate-pdf/dev/1605642581116-2020-11-17T19:49:41.116Z/my-fargate-pdf.zip"
        },
        "FunctionName": "my-fargate-pdf-dev-launchGenerationPDF",
        "Handler": "handler.launch",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "PDF_BUCKET": "fargate-receipts-pdf-bucket",
            "CONTAINER_NAME": "pdf_generator_container",
            "ECS_CLUSTER": {
              "Fn::GetAtt": [
                "FargateECSCluster",
                "Arn"
              ]
            },
            "ECS_TASK_ARN": {
              "Ref": "FargateECSTaskDefinition"
            },
            "ECS_SUBNET": {
              "Ref": "FargateSubnet"
            },
            "ECS_SEC_GROUP": {
              "Ref": "FargateSG"
            },
            "RECEIPTS_TABLE": "user_finances"
          }
        }
      },
      "DependsOn": [
        "LaunchGenerationPDFLogGroup"
      ]
    },
    "LaunchGenerationPDFLambdaVersionTazwITv0qax0ygFiRt5njBLzPHz2M9IenT55OqEqiPY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LaunchGenerationPDFLambdaFunction"
        },
        "CodeSha256": "IMKNZJjy9LeyByFSXyTjq4rJGMRz3udulHoGuGD4lOU="
      }
    },
    "S3BucketFargatereceiptspdfbucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "fargate-receipts-pdf-bucket",
        "NotificationConfiguration": {
          "LambdaConfigurations": [
            {
              "Event": "s3:ObjectCreated:*",
              "Function": {
                "Fn::GetAtt": [
                  "LaunchGenerationPDFLambdaFunction",
                  "Arn"
                ]
              },
              "Filter": {
                "S3Key": {
                  "Rules": [
                    {
                      "Name": "suffix",
                      "Value": ".pdf"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "DependsOn": [
        "LaunchGenerationPDFLambdaPermissionFargatereceiptspdfbucketS3"
      ]
    },
    "LaunchGenerationPDFLambdaPermissionFargatereceiptspdfbucketS3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LaunchGenerationPDFLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "s3.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":s3:::fargate-receipts-pdf-bucket"
            ]
          ]
        },
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        }
      }
    },
    "ApiGatewayResourceSendDashreceipts": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": "3et3hse7ki",
        "PathPart": "send-receipts",
        "RestApiId": "k8sjcbmqde"
      }
    },
    "ApiGatewayMethodSendDashreceiptsGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSendDashreceipts"
        },
        "RestApiId": "k8sjcbmqde",
        "ApiKeyRequired": false,
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "AuthorizationPdfApiGatewayAuthorizer"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "LaunchGenerationPDFLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": "AuthorizationPdfApiGatewayAuthorizer"
    },
    "AuthorizationPdfApiGatewayAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "AuthorizerResultTtlInSeconds": 300,
        "IdentitySource": "method.request.header.Authorization",
        "Name": "AuthorizationPdf",
        "RestApiId": "k8sjcbmqde",
        "Type": "COGNITO_USER_POOLS",
        "ProviderARNs": [
          "arn:aws:cognito-idp:eu-west-2:843314631316:userpool/eu-west-2_kT5EeqP0M"
        ]
      }
    },
    "ApiGatewayDeployment1605642574789": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": "k8sjcbmqde",
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodSendDashreceiptsGet"
      ]
    },
    "LaunchGenerationPDFLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LaunchGenerationPDFLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              "k8sjcbmqde",
              "/*/*"
            ]
          ]
        }
      }
    },
    "FargateECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": {
          "Fn::Sub": [
            "fargate-${StackName}",
            {
              "StackName": {
                "Ref": "AWS::StackName"
              }
            }
          ]
        }
      }
    },
    "FargateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 1
      }
    },
    "FargateTaskRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Sid": "ECS",
              "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "PdfBucketPolicy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": {
                    "Fn::Sub": [
                      "arn:aws:s3:::${BucketName}/*",
                      {
                        "BucketName": "fargate-receipts-pdf-bucket"
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "FargateExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Sid": "ECS",
              "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "FargateVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "FargateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.10.10.0/24",
        "VpcId": {
          "Ref": "FargateVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "FargateIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "FargateAttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "FargateVPC"
        },
        "InternetGatewayId": {
          "Ref": "FargateIGW"
        }
      }
    },
    "FargateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "FargateVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "FargateRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "FargateAttachGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "FargateRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "FargateIGW"
        }
      }
    },
    "FargateSubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "FargateRouteTable"
        },
        "SubnetId": {
          "Ref": "FargateSubnet"
        }
      }
    },
    "FargateSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Generated by Serverless",
        "SecurityGroupIngress": [
          {
            "IpProtocol": -1,
            "CidrIp": "127.0.0.1/32"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ],
        "VpcId": {
          "Ref": "FargateVPC"
        }
      }
    },
    "FargateECSRepo": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "LifecyclePolicy": {
          "LifecyclePolicyText": "{\n  \"rules\": [\n  {\n    \"rulePriority\": 1,\n    \"description\": \"Only keep 8 images\",\n    \"selection\": {\n      \"tagStatus\": \"any\",\n      \"countType\": \"imageCountMoreThan\",\n      \"countNumber\": 8\n    },\n    \"action\": { \"type\": \"expire\" }\n  }]\n}\n"
        }
      }
    },
    "FargateECSTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Cpu": 512,
        "Memory": "1GB",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "FargateExecutionRole",
            "Arn"
          ]
        },
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "FargateTaskRole",
            "Arn"
          ]
        },
        "ContainerDefinitions": [
          {
            "Name": "pdf_generator_container",
            "Image": {
              "Fn::Sub": [
                "${AccountId}.dkr.ecr.${Region}.amazonaws.com/${Repo}",
                {
                  "AccountId": {
                    "Ref": "AWS::AccountId"
                  },
                  "Region": {
                    "Ref": "AWS::Region"
                  },
                  "Repo": {
                    "Ref": "FargateECSRepo"
                  }
                }
              ]
            },
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "FargateLogGroup"
                },
                "awslogs-region": {
                  "Ref": "AWS::Region"
                },
                "awslogs-stream-prefix": {
                  "Ref": "AWS::StackName"
                }
              }
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "LaunchGenerationPDFLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LaunchGenerationPDFLambdaVersionTazwITv0qax0ygFiRt5njBLzPHz2M9IenT55OqEqiPY"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            "k8sjcbmqde",
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    },
    "ECRRepo": {
      "Value": {
        "Fn::Sub": [
          "${AccountId}.dkr.ecr.${Region}.amazonaws.com/${Repo}",
          {
            "AccountId": {
              "Ref": "AWS::AccountId"
            },
            "Region": {
              "Ref": "AWS::Region"
            },
            "Repo": {
              "Ref": "FargateECSRepo"
            }
          }
        ]
      }
    }
  },
  "Transform": [
    "AWS::Serverless-2016-10-31"
  ]
}